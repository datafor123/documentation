import{_ as t,c as s,a as o,o as n}from"./app-BUwMOo9y.js";const r="/assets/image-20250915155702041-BValyEvt.png",i="/assets/image-20250915155727496-Cj71NJQK.png",a="/assets/image-20250915155741001-BWX2U4dN.png",l="/assets/image-20250915155759206-B35_pdWX.png",c={};function g(d,e){return n(),s("div",null,[...e[0]||(e[0]=[o('<blockquote><p>Apply access control at the <strong>data‑source connection layer</strong> so rows, tables/views, and columns are properly filtered or hidden <strong>before</strong> they reach reports, dashboards, ad‑hoc analysis, APIs, or the AI Agent. This guide explains how to configure <strong>Row‑level Security (RLS)</strong> and <strong>Object‑level Security (OLS)</strong> in Datafor BI.</p></blockquote><h2 id="audience" tabindex="-1"><a class="header-anchor" href="#audience"><span>Audience</span></a></h2><p>Data platform owners, BI administrators, security &amp; compliance teams, and developers/operations staff who enforce access control at the source.</p><h2 id="scope-behavior" tabindex="-1"><a class="header-anchor" href="#scope-behavior"><span>Scope &amp; Behavior</span></a></h2><ul><li><strong>Where policies live:</strong> Policies are saved <strong>per connection</strong>. Within a connection you can scope rules by <strong>schema → table/view → column</strong>.</li><li><strong>When they apply:</strong> Filters and visibility rules are injected <strong>at query time</strong> and affect all consumers (reports, dashboards, exploration, API/AI Agent).</li><li><strong>Relation to report ACLs:</strong><ul><li><strong>Report/Folder ACLs</strong> control <em>who can open content</em>.</li><li><strong>Data Security (RLS/OLS)</strong> controls <em>what data/objects are visible once a query runs</em>.</li></ul></li><li><strong>Permission prerequisite:</strong> Only users with the data source’s <strong>Control</strong> permission can open <strong>Data security</strong> and manage policies.</li></ul><h2 id="access-path" tabindex="-1"><a class="header-anchor" href="#access-path"><span>Access Path</span></a></h2><ol><li>Open <strong>Connections</strong>.</li><li>Hover the target connection (e.g., <code>airQuality</code>) and click the <strong>⋯</strong> menu.</li><li>Select <strong>Data security</strong> to open the security console.</li><li>The page has two sections: <ul><li><strong>Row‑level security</strong> — restrict <strong>rows</strong>.</li><li><strong>Object‑level security</strong> — control <strong>object visibility</strong> (tables/views/columns).</li></ul></li></ol><div align="left"><img src="'+r+'" width="100%"></div><h2 id="core-concepts" tabindex="-1"><a class="header-anchor" href="#core-concepts"><span>Core Concepts</span></a></h2><ul><li><strong>Users / Roles:</strong> Who the policy applies to. Prefer <strong>roles</strong> for lower maintenance.</li><li><strong>Schema / Tables &amp; Views:</strong> Scope of the policy.</li><li><strong>Rule Builder:</strong> Combine conditions with <strong>+ Rule</strong> and <strong>+ Group</strong>; a preview of the expression appears at the bottom.</li><li><strong>Group logic (AND/OR):</strong><ul><li>Inside a <strong>group</strong>, rules can be combined with <strong>AND</strong> or <strong>OR</strong>.</li><li><strong>Between groups</strong>, you can also combine with <strong>AND</strong> or <strong>OR</strong> for complex logic.</li></ul></li><li><strong>Allow query all data:</strong> Works <strong>only within the current policy entry</strong> to let the selected users/roles <strong>bypass RLS filtering</strong> (OLS still applies). Typical use: allow a whitelist to see full data while others are restricted.</li><li><strong>OLS default stance (per schema):</strong><ul><li><strong>All users and roles are viewable</strong> (open; add <strong>restrictions</strong> as exceptions), or</li><li><strong>All users and roles are not viewable</strong> (closed; add <strong>allow‑lists</strong> as exceptions).</li></ul></li></ul><h2 id="row‐level-security-rls" tabindex="-1"><a class="header-anchor" href="#row‐level-security-rls"><span>Row‑level Security (RLS)</span></a></h2><p>RLS limits the <strong>set of rows</strong> returned by a table or view. Common scenarios: multi‑tenant isolation, geography/organization scoping, and time‑window filtering.</p><h3 id="steps" tabindex="-1"><a class="header-anchor" href="#steps"><span>Steps</span></a></h3><ol><li>In <strong>Row‑level security</strong>, click <strong>+</strong> to create a policy.</li><li>Enter a <strong>Description</strong> (business intent, data owner, review cadence).</li><li>Select <strong>Users</strong> or <strong>Roles</strong> (roles recommended).</li><li>Choose the <strong>Schema</strong> and target <strong>table/view</strong>.</li><li>Build conditions with the <strong>Rule Builder</strong>: add multiple <strong>Rules</strong>, and use one or more <strong>Groups</strong> with <strong>AND/OR</strong> combinations.</li><li>If a whitelist needs full visibility, turn on <strong>Allow query all data</strong> for <strong>this policy entry</strong>.</li><li>Click <strong>Save</strong>, then ensure the policy <strong>Enable</strong> toggle is on in the list.</li></ol><div align="left"><img src="'+i+'" width="100%"></div><h3 id="examples" tabindex="-1"><a class="header-anchor" href="#examples"><span>Examples</span></a></h3><ul><li>Equality: <code>monthnum = 12</code> (December only)</li><li>Membership: <code>region IN (&#39;WA&#39;,&#39;NSW&#39;,&#39;VIC&#39;)</code></li><li>Range: <code>date BETWEEN &#39;2025-01-01&#39; AND &#39;2025-03-31&#39;</code></li><li>Combined: <code>(region = &#39;WA&#39; AND dept = &#39;Sales&#39;) OR (region = &#39;NSW&#39; AND dept = &#39;Service&#39;)</code></li></ul><blockquote><p><strong>Expression syntax:</strong> Exactly follows the <strong>target database</strong> (string/date literals and escaping are database‑specific).</p></blockquote><h3 id="maintenance-best-practices" tabindex="-1"><a class="header-anchor" href="#maintenance-best-practices"><span>Maintenance &amp; Best Practices</span></a></h3><ul><li>Authorize via <strong>roles</strong> rather than individual accounts.</li><li>Prefer deterministic fields (IDs/codes) in conditions.</li><li>Aim for “<strong>one business intent = one policy</strong>”; document changes and review regularly.</li><li>Validate with a <strong>non‑admin test account</strong>.</li></ul><h2 id="object‐level-security-ols" tabindex="-1"><a class="header-anchor" href="#object‐level-security-ols"><span>Object‑level Security (OLS)</span></a></h2><p>OLS controls the <strong>visibility</strong> of <strong>tables, views, and columns</strong>. Use it to hide sensitive structures (e.g., PII) or expose only a safe subset to most users.</p><h3 id="capabilities-compatibility" tabindex="-1"><a class="header-anchor" href="#capabilities-compatibility"><span>Capabilities &amp; Compatibility</span></a></h3><ul><li>Supports <strong>table‑level and column‑level</strong> control, and <strong>all connectors support</strong> OLS.</li></ul><h3 id="steps-1" tabindex="-1"><a class="header-anchor" href="#steps-1"><span>Steps</span></a></h3><ol><li>In <strong>Object‑level security</strong>, click <strong>+</strong> to create a policy.</li><li>Select the <strong>Schema</strong> and set <strong>Default</strong> (everyone viewable / everyone not viewable).</li><li>In <strong>Tables and views</strong>, pick the target tables/views; expand to choose <strong>columns</strong> as needed.</li><li>On the right, configure <strong>Users/Roles</strong> as exceptions on the side opposite to the default (restricted vs. exempt).</li><li>Click <strong>Save</strong> and enable the policy.</li></ol><div align="left"><img src="'+a+'" width="100%"></div><h3 id="examples-1" tabindex="-1"><a class="header-anchor" href="#examples-1"><span>Examples</span></a></h3><ul><li><strong>Default = viewable:</strong> Restrict column <code>public.aqd.speciescode</code> by adding user A and role <strong>Power User</strong> to <strong>with security</strong> → they <strong>cannot</strong> see this column.</li><li><strong>Default = not viewable:</strong> Allow only a small business subset by adding roles to <strong>without security</strong> → only those roles <strong>can</strong> see the selected objects.</li></ul><h3 id="maintenance-best-practices-1" tabindex="-1"><a class="header-anchor" href="#maintenance-best-practices-1"><span>Maintenance &amp; Best Practices</span></a></h3><ul><li>Start with the <strong>smallest visible surface</strong>: hide sensitive tables first, then open columns as needed.</li><li>Combine with <strong>RLS</strong> to create a two‑layer defense (object visibility + row filtering).</li><li>Use the list summary to audit “which objects apply to which principals”.</li></ul><h2 id="how-rls-ols-interact-and-merge" tabindex="-1"><a class="header-anchor" href="#how-rls-ols-interact-and-merge"><span>How RLS &amp; OLS Interact and Merge</span></a></h2><ul><li><strong>Object precedence:</strong> If OLS hides an object, the query is blocked or omits it—even if RLS would otherwise allow rows.</li><li><strong>Multiple roles = most‑permissive union:</strong> When a user belongs to multiple roles, the <strong>effective permission</strong> is the <strong>union</strong> of all applicable policies (if any policy grants visibility or access, it is granted).</li><li><strong>RLS + Allow query all data:</strong> Enabling it on an RLS entry lets the selected users/roles <strong>bypass RLS</strong>; they <strong>still</strong> remain subject to OLS.</li></ul><h2 id="policy-list-view-summary-page" tabindex="-1"><a class="header-anchor" href="#policy-list-view-summary-page"><span>Policy List View (Summary Page)</span></a></h2><p>The <strong>Data security</strong> page shows two lists—<strong>RLS</strong> and <strong>OLS</strong>—for quick auditing and operations.</p><div align="left"><img src="'+l+'" width="100%"></div><h3 id="list-toolbar-top‐right-of-each-list" tabindex="-1"><a class="header-anchor" href="#list-toolbar-top‐right-of-each-list"><span>List Toolbar (top‑right of each list)</span></a></h3><ul><li><strong>+</strong>: Create a new policy.</li><li><strong>↻ Refresh</strong>: Reload policies and metadata.</li><li><strong>Search</strong>: Filter by description, schema, object name, user/role, or expression text.</li><li><strong>Sortable headers</strong>: Click supported columns to sort.</li></ul><h3 id="rls-list-columns" tabindex="-1"><a class="header-anchor" href="#rls-list-columns"><span>RLS list columns</span></a></h3><ul><li><strong>Enable</strong>: Switch a policy on/off without deleting it.</li><li><strong>Description</strong>: Purpose/owner/notes.</li><li><strong>User</strong>: User chips targeted by the policy (empty if role‑only).</li><li><strong>Role</strong>: Role chips targeted by the policy (e.g., <em>Power User</em>).</li><li><strong>Rules</strong>: Compact preview of table‑scoped expressions, e.g., <code>public.months : (&quot;monthnum&quot; = 12)</code>.</li></ul><blockquote><p><strong>Row action:</strong> Click a policy row to edit; combine with search to quickly isolate policies.</p></blockquote><h3 id="ols-list-columns" tabindex="-1"><a class="header-anchor" href="#ols-list-columns"><span>OLS list columns</span></a></h3><ul><li><strong>Enable</strong>: Toggle the object‑visibility policy.</li><li><strong>Description</strong>: Notes.</li><li><strong>Schema</strong>: Target schema (e.g., <code>public</code>).</li><li><strong>Objects with security</strong>: Objects that are <strong>restricted</strong> for the listed principals (commonly appears when the <strong>default is viewable</strong> and you add <strong>restrictions</strong>).</li><li><strong>Objects without security</strong>: Objects <strong>exempt</strong> from restrictions for the listed principals (commonly appears when the <strong>default is not viewable</strong> and you add <strong>allow‑lists</strong>).</li></ul><blockquote><p>Both columns display <strong>object names</strong> (e.g., <code>public.aqd.speciescode</code>) with <strong>chips</strong> for affected users/roles, providing a clear audit of who is restricted or exempt on which objects.</p></blockquote><p><strong>Row action:</strong> Click a policy row to edit; use search to locate objects or principals quickly.</p><h2 id="appendix-common-operators-patterns" tabindex="-1"><a class="header-anchor" href="#appendix-common-operators-patterns"><span>Appendix: Common Operators &amp; Patterns</span></a></h2><ul><li><strong>Comparisons:</strong> <code>=</code>, <code>&lt;&gt;</code>, <code>&gt;</code>, <code>&gt;=</code>, <code>&lt;</code>, <code>&lt;=</code></li><li><strong>Ranges:</strong> <code>BETWEEN a AND b</code></li><li><strong>Sets:</strong> <code>IN ( ... )</code></li><li><strong>Patterns:</strong> <code>LIKE</code>, <code>ILIKE</code> (DB‑specific)</li><li><strong>Dates/Strings:</strong> Write literals according to your target database’s rules and timezone conventions.</li></ul><h2 id="faq" tabindex="-1"><a class="header-anchor" href="#faq"><span>FAQ</span></a></h2><p><strong>Q1: Which runs first, RLS or OLS?</strong> A: OLS first. If an object is not visible, the query is blocked/omits it; once visible, RLS filters rows.</p><p><strong>Q2: How can only a few users see full data?</strong> A: In the RLS entry for the whitelist users/roles, enable <strong>Allow query all data</strong>. Others remain restricted by default RLS/OLS.</p><p><strong>Q3: Do we support column‑level hiding?</strong> A: Yes. OLS applies to tables and columns, and <strong>all connectors</strong> support it.</p><p><strong>Q4: Why do expressions differ by database?</strong> A: Expressions strictly follow the <strong>target database</strong> syntax (e.g., PostgreSQL, MySQL, ClickHouse). Keep them consistent with your source engine.</p>',52)])])}const h=t(c,[["render",g]]),u=JSON.parse('{"path":"/documentation/Datasource/Data-Security/","title":"Data Security (Row‑Level & Object‑Level)","lang":"en-US","frontmatter":{"title":"Data Security (Row‑Level & Object‑Level)","permalink":"/documentation/Datasource/Data-Security/","tags":null,"description":null,"createTime":"2025/09/15 08:43:06"},"headers":[],"readingTime":{"minutes":4.17,"words":1251},"git":{},"filePathRelative":"documentation/Datasource/50 数据权限.md"}');export{h as comp,u as data};
